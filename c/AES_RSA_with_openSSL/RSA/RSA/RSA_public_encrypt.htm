<HTML>
<HEAD>
<META NAME="GENERATOR" Content="Microsoft Visual Studio 8.0">
<TITLE></TITLE>
</HEAD>
<BODY>

<p>
</p>
<hr />
<h1><a name="name">NAME</a></h1>
<p>RSA_public_encrypt, RSA_private_decrypt - RSA public key cryptography</p>
<p>
</p>
<hr />
<h1><a name="synopsis">SYNOPSIS</a></h1>
<pre>
 #include &lt;openssl/rsa.h&gt;</pre>
<pre>
 int RSA_public_encrypt(int flen, unsigned char *from,
    unsigned char *to, RSA *rsa, int padding);</pre>
<pre>
 int RSA_private_decrypt(int flen, unsigned char *from,
     unsigned char *to, RSA *rsa, int padding);</pre>
<p>
</p>
<hr />
<h1><a name="description">DESCRIPTION</a></h1>
<p><code>RSA_public_encrypt()</code> encrypts the <strong>flen</strong> bytes at <strong>from</strong> (usually a
session key) using the public key <strong>rsa</strong> and stores the ciphertext in
<strong>to</strong>. <strong>to</strong> must point to RSA_size(<strong>rsa</strong>) bytes of memory.</p>
<p><strong>padding</strong> denotes one of the following modes:</p>
<dl>
<dt><strong><a name="rsa_pkcs1_padding" class="item">RSA_PKCS1_PADDING</a></strong></dt>

<dd>
<p>PKCS #1 v1.5 padding. This currently is the most widely used mode.</p>
</dd>
<dt><strong><a name="rsa_pkcs1_oaep_padding" class="item">RSA_PKCS1_OAEP_PADDING</a></strong></dt>

<dd>
<p>EME-OAEP as defined in PKCS #1 v2.0 with SHA-1, MGF1 and an empty
encoding parameter. This mode is recommended for all new applications.</p>
</dd>
<dt><strong><a name="rsa_sslv23_padding" class="item">RSA_SSLV23_PADDING</a></strong></dt>

<dd>
<p>PKCS #1 v1.5 padding with an SSL-specific modification that denotes
that the server is SSL3 capable.</p>
</dd>
<dt><strong><a name="rsa_no_padding" class="item">RSA_NO_PADDING</a></strong></dt>

<dd>
<p>Raw RSA encryption. This mode should <em>only</em> be used to implement
cryptographically sound padding modes in the application code.
Encrypting user data directly with RSA is insecure.</p>
</dd>
</dl>
<p><strong>flen</strong> must be less than RSA_size(<strong>rsa</strong>) - 11 for the PKCS #1 v1.5
based padding modes, less than RSA_size(<strong>rsa</strong>) - 41 for
RSA_PKCS1_OAEP_PADDING and exactly RSA_size(<strong>rsa</strong>) for RSA_NO_PADDING.
The random number generator must be seeded prior to calling
<code>RSA_public_encrypt()</code>.</p>
<p><code>RSA_private_decrypt()</code> decrypts the <strong>flen</strong> bytes at <strong>from</strong> using the
private key <strong>rsa</strong> and stores the plaintext in <strong>to</strong>. <strong>to</strong> must point
to a memory section large enough to hold the decrypted data (which is
smaller than RSA_size(<strong>rsa</strong>)). <strong>padding</strong> is the padding mode that
was used to encrypt the data.</p>
<p>
</p>
<hr />
<h1><a name="return_values">RETURN VALUES</a></h1>
<p><code>RSA_public_encrypt()</code> returns the size of the encrypted data (i.e.,
RSA_size(<strong>rsa</strong>)). <code>RSA_private_decrypt()</code> returns the size of the
recovered plaintext.</p>
<p>On error, -1 is returned; the error codes can be
obtained by <a href="/docs/crypto/ERR_get_error.html">ERR_get_error</a>.</p>
<p>
</p>
<hr />
<h1><a name="conforming_to">CONFORMING TO</a></h1>
<p>SSL, PKCS #1 v2.0</p>
<p>
</p>
<hr />
<h1><a name="see_also">SEE ALSO</a></h1>
<p><a href="/docs/crypto/ERR_get_error.html">ERR_get_error</a>, <a href="/docs/crypto/rand.html">rand</a>, <a href="/docs/crypto/rsa.html">rsa</a>,
<a href="/docs/crypto/RSA_size.html">RSA_size</a></p>
<p>
</p>
<hr />
<h1><a name="history">HISTORY</a></h1>
<p>The <strong>padding</strong> argument was added in SSLeay 0.8. RSA_NO_PADDING is
available since SSLeay 0.9.0, OAEP was added in OpenSSL 0.9.2b.</p>


</BODY>
</HTML>
